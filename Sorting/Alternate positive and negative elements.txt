"""

Given an array of integers A, arrange them in an alternate fashion such that every non-negative number is followed by negative and vice-versa, starting from a negative number, maintaining the order of appearance. The number of non-negative and negative numbers need not be equal.

If there are more non-negative numbers they appear at the end of the array. If there are more negative numbers, they too appear at the end of the array.

Note: Try solving with O(1) extra space.

Input 1:

 A = [-1, -2, -3, 4, 5]
Input 2:

 A = [5, -17, -100, -11]

Example Output

Output 1:

 [-1, 4, -2, 5, -3]
Output 2:

 [-17, 5, -100, -11]


"""

class Solution:
    # @param A : list of integers
    # @return a list of integers
    
    def rotate(self,A,s,e):
        elem = A[e]
        
        for j in range(s,e+1):
            tmp = A[j]
            A[j] = elem
            elem = tmp

    def find_index(self,A, start,v):

        for i in range(start,len(A)):
            if(A[i]>=0 and v==1):
                self.rotate(A,start,i)
                return
            elif(A[i]<0 and v == -1):
                self.rotate(A,start,i)
                return
    def solve(self, A):
        
        for i in range(0,len(A)):
            if(i%2==0 and A[i]<0):
                continue
            elif(i%2!=0 and A[i]>=0):
                continue

            if(A[i]<0):
                self.find_index(A,i,1)
            else:
                self.find_index(A,i,-1)
        return A

