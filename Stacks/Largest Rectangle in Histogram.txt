"""
Problem Description

Given an array of integers A .

A represents a histogram i.e A[i] denotes height of the ith histogram's bar. Width of each bar is 1.

Find the area of the largest rectangle formed by the histogram.



Problem Constraints

1 <= |A| <= 100000

1 <= A[i] <= 1000000000



Input Format

The only argument given is the integer array A.



Output Format

Return the area of largest rectangle in the histogram.



Example Input

Input 1:

 A = [2, 1, 5, 6, 2, 3]
Input 2:

 A = [2]


Example Output

Output 1:

 10
Output 2:

 2


Example Explanation

Explanation 1:

The largest rectangle has area = 10 unit. Formed by A[3] to A[4].
Explanation 2:

Largest rectangle has area 2.
"""


from collections import deque


class Solution:
    # @param A : list of integers
    # @return an integer

    def get_left_boundary(self, A):
        stack = deque()
        ans = []
        for i in range(0,len(A)):
            while (len(stack) > 0 and A[stack[-1]] >= A[i]):
                stack.pop()

            if (len(stack) == 0):
                stack.append(i)
                ans.append(-1)
            else:
                ans.append(stack[-1])
                stack.append(i)
        return ans

    def get_right_boundary(self, A):
        stack = deque()
        ans = []
        for i in range(len(A) - 1, -1, -1):
            while (len(stack) > 0 and A[stack[-1]] >= A[i]):
                stack.pop()

            if (len(stack) == 0):
                stack.append(i)
                ans.append(len(A))
            else:
                ans.append(stack[-1])
                stack.append(i)
        ans.reverse()
        return ans

    def largestRectangleArea(self, A):
            if (len(A) == 1):
                return A[0]


            ans = -1
            left_bound = self.get_left_boundary(A)
            right_bound = self.get_right_boundary(A)
            
            for i in range(0, len(A)):
                ans = max(ans, A[i] * (right_bound[i] - left_bound[i] - 1))

            return ans